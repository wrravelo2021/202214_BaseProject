{
	"info": {
		"_postman_id": "6a7d1689-5a03-41c2-a2c3-a0927d91a85a",
		"name": "Clubs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1524525"
	},
	"item": [
		{
			"name": "Crear un club válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.collectionVariables.set(\"club_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test\",\n    \"foundation_date\": \"2022-09-15T00:48:08-05:00\",\n    \"image_url\": \"https://google/test.png\",\n    \"description\": \"Test description\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clubs",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs"
					]
				}
			},
			"response": [
				{
					"name": "Create city",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New York\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"New York\"\n}"
				}
			]
		},
		{
			"name": "Crear un club inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"The club description cant be longer than 100 character\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test\",\n    \"foundation_date\": \"2022-09-15T00:48:08-05:00\",\n    \"image_url\": \"https://google/test.png\",\n    \"description\": \"sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clubs",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs"
					]
				}
			},
			"response": [
				{
					"name": "Create city",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New York\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"New York\"\n}"
				}
			]
		},
		{
			"name": "Obtener todos los clubs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of clubs > ' + 0, function () {",
							"    var data = pm.response.json()",
							"    pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs"
					]
				}
			},
			"response": [
				{
					"name": "Get all cities",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"New York\"\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener un club por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get city by id",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "\n{\n    \"id\": 1,\n    \"name\": \"New York\"\n}\n"
				}
			]
		},
		{
			"name": "Obtener un club por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"The club with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clubs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get city by id, invalid city id",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The city with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Actualizar un club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"New test\",\n    \"foundation_date\": \"2022-09-15T00:48:08-05:00\",\n    \"image_url\": \"https://google/test.png\",\n    \"description\": \"Test description\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Modify city by id",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"name\": \"New York city\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "\n{\n    \"id\": 1,\n    \"name\": \"New York city\"\n}\n"
				}
			]
		},
		{
			"name": "Actualizar un club con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"The club with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test\",\n    \"foundation_date\": \"2022-09-15T00:48:08-05:00\",\n    \"image_url\": \"https://google/test.png\",\n    \"description\": \"Test description\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clubs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Modify city by id/ invalid city id",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"name\": \"New York city\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"0"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The city_id was not found.\"\n}"
				}
			]
		},
		{
			"name": "Eliminar un club por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete city",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities/{{city_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{city_id}}"
							]
						}
					},
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 204,\n    \"message\": \"The city was deleted succesfully\"\n}"
				}
			]
		},
		{
			"name": "Eliminar un club con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"The club with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete city, invalid city id",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The city_id was not found.\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "club_id",
			"value": ""
		}
	]
}